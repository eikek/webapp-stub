package webappstub.store.migration.changesets

import webappstub.store.migration.ChangeSet

import skunk.syntax.all.*

object Account:
  val get: ChangeSet = ChangeSet.create("create account table")(
    sql"""
    create table "account_state"(
      "id" int generated by default as identity not null primary key,
      "name" varchar not null,
      constraint "account_state_name_uniq" unique("name")
    )
    """,
    sql"""
    insert into "account_state" ("name")
    values ('active'), ('inactive')
    """,
    sql"""
    create table if not exists "account" (
      "id" bigint generated by default as identity not null primary key,
      "state_id" int not null,
      "login_name" varchar not null,
      "password" varchar not null,
      "created_at" timestamptz not null default now(),
      constraint "account_login_name_uniq" unique("login_name"),
      constraint "account_state_id_fk"
        foreign key ("state_id")
        references "account_state"("id")
        on delete no action
    )""",
    sql"""
    insert into "account" ("state_id", "login_name", "password")
    values ((select id from "account_state" where "name" = 'active'), 'auto_user', 'none')
    """
  )

  val invitation: ChangeSet = ChangeSet.create("create invitation table")(
    sql"""
    create table if not exists "invitation"(
      "id" bigint generated by default as identity not null primary key,
      "key" varchar not null,
      "created_at" timestamptz not null default now(),
      constraint "invitation_key_uniq" unique("key")
    )
      """
  )
